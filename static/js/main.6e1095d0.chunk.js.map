{"version":3,"sources":["api/api.js","redux/register-reducer.js","redux/app-reducer.js","redux/redux-store.js","App.js","index.js","redux/users-reducer.js"],"names":["instance","axios","baseURL","usersAPI","loadToken","get","then","response","data","loadUsersData","page","sendRegisterData","key","token","send_data","FormData","append","post","headers","registerAPI","loadPositionsData","SET_POSITIONS","SET_REGISTER_BUTTON_STATUS","initialState","positions","register_button_status","setRegisterButtonStatus","status","type","getPositions","dispatch","a","alert","message","register","forceUpdate","getUsersData","registerReducer","state","action","SET_APP_INITIALIZED","initialized","appReducer","reducers","combineReducers","users","usersReducer","resgisterReducer","app","store","createStore","applyMiddleware","thunkMiddleWare","IndexContainer","lazy","Header","Footer","AppContainer","compose","connect","initializeApp","get_positions_promise","get_users_promise","Promise","all","error","props","useEffect","id","fallback","AppLanding","ReactDOM","render","document","getElementById","SET_USERS_DATA","SET_SHOW_MORE_STATUS","users_data","total_pages","current_page","show_more_status","setUsersData","new_users","setShowMoreStatus","_current_page"],"mappings":"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","file":"static/js/main.6e1095d0.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://frontend-test-assignment-api.abz.agency/api/v1/'\r\n})\r\n\r\nexport const usersAPI = { \r\n    loadToken () {\r\n        return instance.get(`token`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n\r\n    loadUsersData (page) {\r\n        return instance.get(`users?page=${page}&count=6`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n\r\n    async sendRegisterData (data) {\r\n        const {token}  = await this.loadToken();\r\n        const send_data = new FormData();\r\n\r\n        for (let key in data) {\r\n            send_data.append(key, data[key]);\r\n        }\r\n\r\n        return instance.post(`users`, send_data, { headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Token': token} }).then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n};\r\n\r\nexport const registerAPI = { \r\n    loadPositionsData () {\r\n        return instance.get(`positions`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n};","import {usersAPI, registerAPI} from '../api/api';\r\nimport {getUsersData} from './users-reducer';\r\n\r\nconst SET_POSITIONS = 'REGISTER/SET_POSITIONS';\r\nconst SET_REGISTER_BUTTON_STATUS = 'REGISTER/SET_REGISTER_BUTTON_STATUS'\r\n\r\nlet initialState = {\r\n    positions: [\r\n        \r\n    ],\r\n\r\n    register_button_status: 'disabled'\r\n};\r\n\r\nexport const setRegisterButtonStatus = (status) => {\r\n    return {\r\n        type: SET_REGISTER_BUTTON_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const setPostionsData = (data) => {\r\n    return {\r\n        type: SET_POSITIONS,\r\n        positions: data\r\n    }\r\n}\r\n\r\n// Thunk\r\n\r\n\r\nexport const getPositions = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let {positions} = await registerAPI.loadPositionsData();\r\n\r\n            dispatch(setPostionsData(positions));\r\n            dispatch(setRegisterButtonStatus('enable'));\r\n        } catch (error) {\r\n            alert(error.response.data.message);\r\n        }\r\n    }\r\n}\r\n\r\nexport const register = (data, forceUpdate) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(setRegisterButtonStatus('disabled'));\r\n            await usersAPI.sendRegisterData(data);\r\n            dispatch(getUsersData(0));\r\n            forceUpdate({});\r\n        } catch (error) {\r\n            alert(error.response.data.message);\r\n        }\r\n\r\n        dispatch(setRegisterButtonStatus('enable'));\r\n    }\r\n}\r\n\r\nexport const registerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_POSITIONS:\r\n            return {\r\n                ...state,\r\n                positions: [\r\n                    ...action.positions\r\n                ]\r\n            }\r\n\r\n        case SET_REGISTER_BUTTON_STATUS:\r\n            return {\r\n                ...state,\r\n                register_button_status: action.status\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default registerReducer;","import { getPositions } from './register-reducer';\r\nimport { getUsersData } from './users-reducer';\r\n\r\nconst SET_APP_INITIALIZED = 'APP/SET_APP_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport const changeInitialized = () => {\r\n    return {\r\n        type: SET_APP_INITIALIZED\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        try {\r\n            let get_positions_promise = dispatch(getPositions());\r\n            let get_users_promise = dispatch(getUsersData(0));\r\n\r\n            Promise.all([get_positions_promise, get_users_promise]).then(() => {\r\n                dispatch(changeInitialized());\r\n            });   \r\n        } catch (error) {\r\n            alert(error.response.data.message);\r\n        }    \r\n    }\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_APP_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {combineReducers, createStore, applyMiddleware} from 'redux';\r\nimport thunkMiddleWare from 'redux-thunk';\r\n\r\nimport usersReducer from './users-reducer';\r\nimport resgisterReducer from './register-reducer';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    users: usersReducer,\r\n    register: resgisterReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","import React, { useEffect, lazy, Suspense } from 'react';\nimport { compose } from 'redux';\nimport { connect, Provider } from 'react-redux';\n\nimport { initializeApp } from './redux/app-reducer';\nimport store from './redux/redux-store';\n\nconst IndexContainer = lazy(() => import('./components/index/index-container'));\nconst Header = lazy(() => import('./components/header/header'));\nconst Footer = lazy(() => import('./components/footer/footer'));\n\nconst App = (props) => {\n  useEffect(() => {\n      !props.initialized && props.initializeApp();\n  }, [props.initialized]);\n\n  return (\n    \n      <div id={'wrapper'}>\n        <Suspense fallback={<div id={'loading'}/>}>\n          <Header/>\n          <IndexContainer/>\n          <Footer/>\n        </Suspense>\n      </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      initialized: state.app.initialized\n  }\n}\n\nconst AppContainer = compose(\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst AppLanding = () => {\n  return (\n    <Provider store={store}>\n      <AppContainer/>\n    </Provider>\n  )\n}\n\nexport default AppLanding;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style.scss';\nimport AppLanding from './App';\n\nReactDOM.render(<AppLanding/>, document.getElementById('body'));","import {usersAPI} from '../api/api';\r\n\r\nconst SET_USERS_INITIALIZED = 'USERS/SET_USERS_INITIALIZED';\r\nconst SET_USERS_DATA = 'USERS/SET_USERS_DATA';\r\nconst SET_SHOW_MORE_STATUS = 'USERS/SET_SHOW_MORE_STATUS';\r\n\r\nlet initialState = {\r\n    users_data: [\r\n\r\n    ],\r\n\r\n    total_pages: 0,\r\n    current_page: 0,\r\n    show_more_status: 'disabled'\r\n};\r\n\r\nexport const setUsersData = (new_users, total_pages, current_page) => {\r\n    return {\r\n        type: SET_USERS_DATA,\r\n        new_users,\r\n        total_pages,\r\n        current_page\r\n    }\r\n}\r\n\r\nexport const setShowMoreStatus = (status) => {\r\n    return {\r\n        type: SET_SHOW_MORE_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\n// Thunk\r\n\r\nexport const getUsersData = (current_page) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(setShowMoreStatus('disabled'));\r\n\r\n            let _current_page = current_page + 1;\r\n            let {users, total_pages} = await usersAPI.loadUsersData(_current_page);\r\n\r\n            dispatch(setUsersData(users, total_pages, _current_page));\r\n            dispatch(setShowMoreStatus((_current_page >= total_pages) ? 'hide': 'enable'));\r\n        } catch (error) {\r\n            alert(error.response.data.message);\r\n        }\r\n    }\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_SHOW_MORE_STATUS:\r\n            return {\r\n                ...state,\r\n                show_more_status: action.status\r\n            }\r\n\r\n        case SET_USERS_DATA:\r\n            return {\r\n                ...state,\r\n                users_data: (action.current_page === 1) ? \r\n                    [\r\n                        ...action.new_users\r\n                    ]\r\n                    :\r\n                    [\r\n                        ...state.users_data,\r\n                        ...action.new_users\r\n                    ],\r\n                total_pages: action.total_pages,\r\n                current_page: action.current_page\r\n            }\r\n    \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;"],"sourceRoot":""}